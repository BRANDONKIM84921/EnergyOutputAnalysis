summary(map_data$gen)@coefficients
map_data <- energy_data %>%
filter(YEAR == 2013,
MONTH == "January",
producer == "Electric Generators, Electric Utilities",
energy == "Total") %>%
select(name, gen)
# Input values for year, month, producer, and energy.
# followed leaflet choropleths tutorial: https://rstudio.github.io/leaflet/choropleths.html
bins <- c(-Inf, 0, 2000000, 4000000, 6000000, 8000000, 10000000, Inf)
pal <- colorBin("Blues", domain = map_data$gen, bins = bins)
g <- map(map_data$gen, comma_format(digits = 12))
n <- map_data$name
labels <- map2(n, g, \(n, g) paste(n, ": ", g, ifelse(is.na(g), "", " megawatthours"), sep="")) %>%
lapply(htmltools::HTML)
leaflet(map_data) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN'))) %>%
addPolygons(fillColor = ~pal(gen),
weight = 2,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#700",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(textsize = "13px")) %>%
addLegend(pal = pal, values = ~gen, opacity = 0.7, title = "In Megawatthours",
position = "bottomright")
allstates <- data.frame(name = levels(as.factor(energy_data$name)))
map_data <- merge(map_data, allstates, all=T)
map_data <- merge(states, map_data, by="name", all=F)
# followed leaflet choropleths tutorial: https://rstudio.github.io/leaflet/choropleths.html
bins <- c(-Inf, 0, 2000000, 4000000, 6000000, 8000000, 10000000, Inf)
pal <- colorBin("Blues", domain = map_data$gen, bins = bins)
g <- map(map_data$gen, comma_format(digits = 12))
n <- map_data$name
labels <- map2(n, g, \(n, g) paste(n, ": ", g, ifelse(is.na(g), "", " megawatthours"), sep="")) %>%
lapply(htmltools::HTML)
leaflet(map_data) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN'))) %>%
addPolygons(fillColor = ~pal(gen),
weight = 2,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#700",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(textsize = "13px")) %>%
addLegend(pal = pal, values = ~gen, opacity = 0.7, title = "In Megawatthours",
position = "bottomright")
map_data <- energy_data %>%
filter(YEAR == 2012,
MONTH == "January",
producer == "Electric Generators, Electric Utilities",
energy == "Total") %>%
select(name, gen)
# Input values for year, month, producer, and energy.
allstates <- data.frame(name = levels(as.factor(energy_data$name)))
map_data <- merge(map_data, allstates, all=T)
map_data <- merge(states, map_data, by="name", all=F)
# followed leaflet choropleths tutorial: https://rstudio.github.io/leaflet/choropleths.html
bins <- c(-Inf, 0, 2000000, 4000000, 6000000, 8000000, 10000000, Inf)
pal <- colorBin("Blues", domain = map_data$gen, bins = bins)
g <- map(map_data$gen, comma_format(digits = 12))
n <- map_data$name
labels <- map2(n, g, \(n, g) paste(n, ": ", g, ifelse(is.na(g), "", " megawatthours"), sep="")) %>%
lapply(htmltools::HTML)
leaflet(map_data) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN'))) %>%
addPolygons(fillColor = ~pal(gen),
weight = 2,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#700",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(textsize = "13px")) %>%
addLegend(pal = pal, values = ~gen, opacity = 0.7, title = "In Megawatthours",
position = "bottomright")
map_data <- energy_data %>%
filter(YEAR == 2011,
MONTH == "January",
producer == "Electric Generators, Electric Utilities",
energy == "Total") %>%
select(name, gen)
# Input values for year, month, producer, and energy.
allstates <- data.frame(name = levels(as.factor(energy_data$name)))
map_data <- merge(map_data, allstates, all=T)
map_data <- merge(states, map_data, by="name", all=F)
# followed leaflet choropleths tutorial: https://rstudio.github.io/leaflet/choropleths.html
bins <- c(-Inf, 0, 2000000, 4000000, 6000000, 8000000, 10000000, Inf)
pal <- colorBin("Blues", domain = map_data$gen, bins = bins)
g <- map(map_data$gen, comma_format(digits = 12))
n <- map_data$name
labels <- map2(n, g, \(n, g) paste(n, ": ", g, ifelse(is.na(g), "", " megawatthours"), sep="")) %>%
lapply(htmltools::HTML)
leaflet(map_data) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN'))) %>%
addPolygons(fillColor = ~pal(gen),
weight = 2,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#700",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(textsize = "13px")) %>%
addLegend(pal = pal, values = ~gen, opacity = 0.7, title = "In Megawatthours",
position = "bottomright")
map_data <- energy_data %>%
filter(YEAR == 2022,
MONTH == "January",
producer == "Electric Generators, Electric Utilities",
energy == "Total") %>%
select(name, gen)
# Input values for year, month, producer, and energy.
# followed leaflet choropleths tutorial: https://rstudio.github.io/leaflet/choropleths.html
bins <- c(-Inf, 0, 2000000, 4000000, 6000000, 8000000, 10000000, Inf)
pal <- colorBin("Blues", domain = map_data$gen, bins = bins)
g <- map(map_data$gen, comma_format(digits = 12))
n <- map_data$name
labels <- map2(n, g, \(n, g) paste(n, ": ", g, ifelse(is.na(g), "", " megawatthours"), sep="")) %>%
lapply(htmltools::HTML)
leaflet(map_data) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN'))) %>%
addPolygons(fillColor = ~pal(gen),
weight = 2,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#700",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(textsize = "13px")) %>%
addLegend(pal = pal, values = ~gen, opacity = 0.7, title = "In Megawatthours",
position = "bottomright")
allstates <- data.frame(name = levels(as.factor(energy_data$name)))
map_data <- merge(map_data, allstates, all=T)
map_data <- merge(states, map_data, by="name", all=F)
# followed leaflet choropleths tutorial: https://rstudio.github.io/leaflet/choropleths.html
bins <- c(-Inf, 0, 2000000, 4000000, 6000000, 8000000, 10000000, Inf)
pal <- colorBin("Blues", domain = map_data$gen, bins = bins)
g <- map(map_data$gen, comma_format(digits = 12))
n <- map_data$name
labels <- map2(n, g, \(n, g) paste(n, ": ", g, ifelse(is.na(g), "", " megawatthours"), sep="")) %>%
lapply(htmltools::HTML)
leaflet(map_data) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN'))) %>%
addPolygons(fillColor = ~pal(gen),
weight = 2,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#700",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(textsize = "13px")) %>%
addLegend(pal = pal, values = ~gen, opacity = 0.7, title = "In Megawatthours",
position = "bottomright")
map_data <- energy_data %>%
filter(YEAR == 2002,
MONTH == "January",
producer == "Electric Generators, Electric Utilities",
energy == "Total") %>%
select(name, gen)
# Input values for year, month, producer, and energy.
# followed leaflet choropleths tutorial: https://rstudio.github.io/leaflet/choropleths.html
bins <- c(-Inf, 0, 2000000, 4000000, 6000000, 8000000, 10000000, Inf)
pal <- colorBin("Blues", domain = map_data$gen, bins = bins)
g <- map(map_data$gen, comma_format(digits = 12))
n <- map_data$name
labels <- map2(n, g, \(n, g) paste(n, ": ", g, ifelse(is.na(g), "", " megawatthours"), sep="")) %>%
lapply(htmltools::HTML)
leaflet(map_data) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN'))) %>%
addPolygons(fillColor = ~pal(gen),
weight = 2,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#700",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(textsize = "13px")) %>%
addLegend(pal = pal, values = ~gen, opacity = 0.7, title = "In Megawatthours",
position = "bottomright")
allstates <- data.frame(name = levels(as.factor(energy_data$name)))
map_data <- merge(map_data, allstates, all=T)
map_data <- merge(states, map_data, by="name", all=F)
# followed leaflet choropleths tutorial: https://rstudio.github.io/leaflet/choropleths.html
bins <- c(-Inf, 0, 2000000, 4000000, 6000000, 8000000, 10000000, Inf)
pal <- colorBin("Blues", domain = map_data$gen, bins = bins)
g <- map(map_data$gen, comma_format(digits = 12))
n <- map_data$name
labels <- map2(n, g, \(n, g) paste(n, ": ", g, ifelse(is.na(g), "", " megawatthours"), sep="")) %>%
lapply(htmltools::HTML)
leaflet(map_data) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN'))) %>%
addPolygons(fillColor = ~pal(gen),
weight = 2,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#700",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(textsize = "13px")) %>%
addLegend(pal = pal, values = ~gen, opacity = 0.7, title = "In Megawatthours",
position = "bottomright")
map_data <- energy_data %>%
filter(YEAR == 2002,
MONTH == "January",
producer == "Electric Generators, Electric Utilities",
energy == "Total") %>%
select(name, gen)
# Input values for year, month, producer, and energy.
allstates <- data.frame(name = levels(as.factor(energy_data$name)))
map_data <- merge(map_data, allstates, all=T)
map_data <- merge(states, map_data, by="name", all=F)
# followed leaflet choropleths tutorial: https://rstudio.github.io/leaflet/choropleths.html
bins <- c(-Inf, 0, 2000000, 4000000, 6000000, 8000000, 10000000, Inf)
pal <- colorBin("Blues", domain = map_data$gen, bins = bins)
g <- map(map_data$gen, comma_format(digits = 12))
n <- map_data$name
labels <- map2(n, g, \(n, g) paste(n, ": ", g, ifelse(is.na(g), "", " megawatthours"), sep="")) %>%
lapply(htmltools::HTML)
leaflet(map_data) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN'))) %>%
addPolygons(fillColor = ~pal(gen),
weight = 2,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#700",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(textsize = "13px")) %>%
addLegend(pal = pal, values = ~gen, opacity = 0.7, title = "In Megawatthours",
position = "bottomright")
map_data <- energy_data %>%
filter(YEAR == 2002,
MONTH == "January",
producer == "Electric Generators, Electric Utilities",
energy == "Coal") %>%
select(name, gen)
# Input values for year, month, producer, and energy.
allstates <- data.frame(name = levels(as.factor(energy_data$name)))
map_data <- merge(map_data, allstates, all=T)
map_data <- merge(states, map_data, by="name", all=F)
# followed leaflet choropleths tutorial: https://rstudio.github.io/leaflet/choropleths.html
bins <- c(-Inf, 0, 2000000, 4000000, 6000000, 8000000, 10000000, Inf)
pal <- colorBin("Blues", domain = map_data$gen, bins = bins)
g <- map(map_data$gen, comma_format(digits = 12))
n <- map_data$name
labels <- map2(n, g, \(n, g) paste(n, ": ", g, ifelse(is.na(g), "", " megawatthours"), sep="")) %>%
lapply(htmltools::HTML)
leaflet(map_data) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN'))) %>%
addPolygons(fillColor = ~pal(gen),
weight = 2,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#700",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(textsize = "13px")) %>%
addLegend(pal = pal, values = ~gen, opacity = 0.7, title = "In Megawatthours",
position = "bottomright")
# followed leaflet choropleths tutorial: https://rstudio.github.io/leaflet/choropleths.html
bins <- c(-Inf, 0, 2000000, 4000000, 6000000, 8000000, 10000000, Inf)
pal <- colorBin("Blues", domain = map_data$gen, bins = bins)
g <- map(map_data$gen, comma_format(digits = 12))
n <- map_data$name
labels <- map2(n, g, \(n, g) paste(n, ": ", g, ifelse(is.na(g), "", " megawatthours"), sep="")) %>%
lapply(htmltools::HTML)
leaflet(map_data) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN'),
minZoom = 3, #gives barrier to how far out you can go
maxZoom = 6 #gives barrier to how far in you can go
)) %>%
addPolygons(fillColor = ~pal(gen),
weight = 2,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#700",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(textsize = "13px")) %>%
addLegend(pal = pal, values = ~gen, opacity = 0.7, title = "In Megawatthours",
position = "bottomright")
# followed leaflet choropleths tutorial: https://rstudio.github.io/leaflet/choropleths.html
bins <- c(-Inf, 0, 2000000, 4000000, 6000000, 8000000, 10000000, Inf)
pal <- colorBin("Blues", domain = map_data$gen, bins = bins)
g <- map(map_data$gen, comma_format(digits = 12))
n <- map_data$name
labels <- map2(n, g, \(n, g) paste(n, ": ", g, ifelse(is.na(g), "", " megawatthours"), sep="")) %>%
lapply(htmltools::HTML)
leaflet(map_data) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN'),
minZoom = 3, #gives barrier to how far out you can go
maxZoom = 6 #gives barrier to how far in you can go
)) %>%
addPolygons(fillColor = ~pal(gen),
weight = 2,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#700",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(textsize = "13px")) %>%
addLegend(pal = pal, values = ~gen, opacity = 0.7, title = "In Megawatthours",
position = "bottomright")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
levels(as.factor(energy_data$MONTH))
factor(levels(as.factor(energy_data$MONTH)), levels=months.name)
factor(levels(as.factor(energy_data$MONTH)), levels=month.name)
factor(levels(as.factor(energy_data$MONTH)), levels=month.name)
factor(levels(as.factor(energy_data$MONTH)), levels=month.name)
factor(levels(as.factor(energy_data$MONTH)), levels=month.name)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(MASS, lib.loc = "C:/Program Files/R/R-4.3.0/library")
library(MASS, lib.loc = "C:/Program Files/R/R-4.3.0/library")
detach("package:MASS", unload = TRUE)
library(MASS, lib.loc = "C:/Program Files/R/R-4.3.0/library")
shiny::runApp()
install.packages("MASS")
install.packages("MASS")
install.packages("Rtools")
r()
R.version
shiny::runApp()
rsconnect::showLogs()
runApp()
rsconnect::showLogs()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
data.frame(name = levels(as.factor(energy_data$name)),
YEAR = input$year,
MONTH = input$month,
producer = input$prod,
energy = input$energy)
runApp()
runApp()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(tidyverse)
library(readxl)
library(janitor)
library(leaflet)
library(geojsonio)
library(sp)
library(scales)
#Using purrr to iterate and combine each sheet of an excel workbook
#https://stackoverflow.com/questions/40550415/how-can-i-merge-multiple-sheets-of-an-excel-workbook-in-r
sheets <- excel_sheets(here::here("generation_monthly.xlsx"))
sheets <- sheets[-18]
sheets_2012 <- sheets[0:6]
sheets_2023 <- sheets[7:17]
energy_data_2012 <- map_df(sheets_2012, ~ read_excel(here::here( "generation_monthly.xlsx"), sheet = .x))
energy_data_2023 <- map_df(sheets_2023, ~ read_excel(here::here( "generation_monthly.xlsx"), sheet = .x, skip = 4))
energy_data_2012_fhalf <- energy_data_2012 %>%
filter(is.na(YEAR)) %>%
select(7:12) %>%
slice(-1:-3) %>%
row_to_names(row_number = 1)
energy_data_2012_lhalf <- energy_data_2012 %>%
filter(!is.na(YEAR)) %>%
select(1:6)
energy_data_2023_clean <- energy_data_2023 %>%
mutate(`GENERATION (Megawatthours)` = coalesce(`GENERATION (Megawatthours)`, `GENERATION\r\n(Megawatthours)`)) %>%
select(1:6)
energy_data <- rbind(energy_data_2012_fhalf, energy_data_2012_lhalf, energy_data_2023_clean)
energy_data <- energy_data %>%
rename(name = STATE,
gen = `GENERATION (Megawatthours)`,
producer = `TYPE OF PRODUCER`,
energy = `ENERGY SOURCE`) %>%
filter(!(name %in% c("US-TOTAL", "DC"))) %>%
mutate(name = state.name[match(name, state.abb)],
gen = as.numeric(gen),
MONTH = month.name[as.numeric(MONTH)],
YEAR = as.numeric(YEAR))
states <- geojson_read("https://rstudio.github.io/leaflet/json/us-states.geojson", what = "sp")
model <- lm(gen ~ ., data = energy_data)
map_data <- data.frame(name = levels(as.factor(energy_data$name)),
YEAR = 2043,
MONTH = "October",
producer = "Total Electric Power Industry",
energy = "Total")
# Input values for year, month, producer, and energy.
map_data$gen = predict(model, newdata = map_data)
map_data <- select(map_data, name, gen)
allstates <- data.frame(name = levels(as.factor(energy_data$name)))
map_data <- merge(map_data, allstates, all=T)
map_data <- merge(states, map_data, by="name", all=F)
View(map_data)
map_data
runApp()
runApp()
runApp()
rsconnect::showLogs()
runApp()
runApp()
gc()
rsconnect::showLogs()
runApp()
rsconnect::showLogs()
gc()
gc()
rsconnect::showLogs()
